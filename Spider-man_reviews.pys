from pyspark.sqlimport SparkSession
from pyspark.sql.functionsimport col, udf, length, split
from pyspark.sql.typesimport BooleanType, StringType, FloatType
import matplotlib.pyplotas plt

# Создание сессии Spark
spark = SparkSession.builder.appName("SpiderManReviews").getOrCreate()

# Загрузка данных из CSV спомощью PySpark
df = spark.read.csv('imdb-spider-man-reviews.csv', header=True, inferSchema=True)

# Переименование столбца с неправильным названием
for column in df.columns:
if 'Movie' in column:
df = df.withColumnRenamed(column, 'Movie')

# Оставляем только нужные столбцы
df_filtered = df.select("Rating", "Title", "Date", "Review", "Movie")

# Преобразованиестолбца Rating к типу float
df_filtered = df_filtered.withColumn("Rating", col("Rating").cast(FloatType()))

# Удаление строк с пустыми значениями в столбце 'Movie'
df_filtered = df_filtered.filter(col("Movie").isNotNull())

# Функция для фильтрации положительных отзывов и проверки длины
def is_positive_review(rating, review):
if rating is None or review is None:
return False
    return (rating >= 4) and (len(review.split()) >40)

is_positive_review_udf = udf(is_positive_review, BooleanType())

# Фильтрация DataFrame
df_filtered = df_filtered.filter(is_positive_review_udf(col("Rating"), col("Review")))

# Функция для удаления указанных слов из отзывов
def remove_words(review):
words_to_remove = ["fantastic", "plot", "hate", "origin", "hero", "forward", "hype", "school"]
review_words = review.split()
filtered_words = [word for word in review_wordsif word.lower() not in words_to_remove]
return " ".join(filtered_words)

remove_words_udf = udf(remove_words, StringType())

# Применение функции для удаления слов
df_filtered = df_filtered.withColumn("Cleaned_Review", remove_words_udf(col("Review")))

# Подсчет количества отзывов по фильмам
df_success = df_filtered.groupBy("Movie").count().orderBy(col("count").desc())

# Конвертация обратно в pandas DataFrame для построения графика
df_success_pandas = df_success.toPandas()

# Построение графика
plt.figure(figsize=(10, 6))
plt.barh(df_success_pandas["Movie"], df_success_pandas["count"], color='skyblue')
plt.xlabel('Number of Positive Reviews')
plt.title('Most Successful Spider-Man Movies Based on Reviews')
plt.gca().invert_yaxis()
plt.show()
